// Code generated by MockGen. DO NOT EDIT.
// Source: C:\Users\ambivert\Desktop\repos\src\github.com\IMDb-searcher\internal\config\config.go

// Package mock_config is a generated GoMock package.
package mock_config

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIConfig is a mock of IConfig interface.
type MockIConfig struct {
	ctrl     *gomock.Controller
	recorder *MockIConfigMockRecorder
}

// MockIConfigMockRecorder is the mock recorder for MockIConfig.
type MockIConfigMockRecorder struct {
	mock *MockIConfig
}

// NewMockIConfig creates a new mock instance.
func NewMockIConfig(ctrl *gomock.Controller) *MockIConfig {
	mock := &MockIConfig{ctrl: ctrl}
	mock.recorder = &MockIConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIConfig) EXPECT() *MockIConfigMockRecorder {
	return m.recorder
}

// GetDBFileNames mocks base method.
func (m *MockIConfig) GetDBFileNames() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDBFileNames")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetDBFileNames indicates an expected call of GetDBFileNames.
func (mr *MockIConfigMockRecorder) GetDBFileNames() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDBFileNames", reflect.TypeOf((*MockIConfig)(nil).GetDBFileNames))
}

// GetDBPathToPackedFiles mocks base method.
func (m *MockIConfig) GetDBPathToPackedFiles() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDBPathToPackedFiles")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetDBPathToPackedFiles indicates an expected call of GetDBPathToPackedFiles.
func (mr *MockIConfigMockRecorder) GetDBPathToPackedFiles() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDBPathToPackedFiles", reflect.TypeOf((*MockIConfig)(nil).GetDBPathToPackedFiles))
}

// GetDBPathToUnpackedFiles mocks base method.
func (m *MockIConfig) GetDBPathToUnpackedFiles() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDBPathToUnpackedFiles")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetDBPathToUnpackedFiles indicates an expected call of GetDBPathToUnpackedFiles.
func (mr *MockIConfigMockRecorder) GetDBPathToUnpackedFiles() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDBPathToUnpackedFiles", reflect.TypeOf((*MockIConfig)(nil).GetDBPathToUnpackedFiles))
}
