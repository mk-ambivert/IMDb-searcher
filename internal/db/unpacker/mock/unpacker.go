// Code generated by MockGen. DO NOT EDIT.
// Source: ..\src\github.com\IMDb-searcher\internal\db\unpacker\unpacker.go

// Package mock_unpacker is a generated GoMock package.
package mock_unpacker

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIUnpacker is a mock of IUnpacker interface.
type MockIUnpacker struct {
	ctrl     *gomock.Controller
	recorder *MockIUnpackerMockRecorder
}

// MockIUnpackerMockRecorder is the mock recorder for MockIUnpacker.
type MockIUnpackerMockRecorder struct {
	mock *MockIUnpacker
}

// NewMockIUnpacker creates a new mock instance.
func NewMockIUnpacker(ctrl *gomock.Controller) *MockIUnpacker {
	mock := &MockIUnpacker{ctrl: ctrl}
	mock.recorder = &MockIUnpackerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUnpacker) EXPECT() *MockIUnpackerMockRecorder {
	return m.recorder
}

// UnGzipFiles mocks base method.
func (m *MockIUnpacker) UnGzipFiles() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UnGzipFiles")
	ret0, _ := ret[0].(error)
	return ret0
}

// UnGzipFiles indicates an expected call of UnGzipFiles.
func (mr *MockIUnpackerMockRecorder) UnGzipFiles() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnGzipFiles", reflect.TypeOf((*MockIUnpacker)(nil).UnGzipFiles))
}
